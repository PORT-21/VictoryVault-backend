# generated by fastapi-codegen:
#   filename:  bundled_openapi.yaml
#   timestamp: 2023-04-09T16:00:59+00:00

from __future__ import annotations

from typing import List, Union

from fastapi import FastAPI, Header
from pydantic import conint

from .dto import Achivment, CreateOrganization, UpdateAchivment, UpdateOrganization

app = FastAPI(
    title='VictoryVault',
    description='Геймификация по венам и стенам',
    version='0.0.1',
    servers=[{'url': 'https://server.com'}],
)


@app.post(
    '/api/achivment', response_model=None, responses={'201': {'model': Achivment}}
)
def create_achivment(body: Achivment) -> Union[None, Achivment]:
    """
    Создаёт объект ачивки
    """
    pass


@app.get('/api/achivment', response_model=List[Achivment])
def list_achivments(
    page: int,
    size: conint(ge=1, le=200) = 20,
    authorization: str = Header(..., alias='Authorization'),
) -> List[Achivment]:
    pass


@app.post(
    '/api/achivment/upload_icon', response_model=None, responses={'201': {'model': str}}
)
def upload_achivment_icon() -> Union[None, str]:
    """
    Позволяет загрузить изображение в систему
    """
    pass


@app.get('/api/achivment/{id}', response_model=Achivment)
def get_achivment(id: int) -> Achivment:
    """
    Возвращает ачивку по id
    """
    pass


@app.patch('/api/achivment/{id}', response_model=None)
def update_achivment(body: UpdateAchivment) -> None:
    """
    Обновляет поля ачивки
    """
    pass


@app.delete('/api/achivment/{id}', response_model=None)
def delete_acivment_by_id(id: int) -> None:
    """
    Удаляет ачивку по id
    """
    pass


@app.post('/api/organization', response_model=None)
def create_organization(body: CreateOrganization) -> None:
    pass


@app.patch('/api/organization', response_model=None)
def update_organization_info(body: UpdateOrganization) -> None:
    pass


@app.post('/api/organization/change_password', response_model=None)
def change_password(body: str) -> None:
    pass


@app.post(
    '/api/organization/upload_icon',
    response_model=None,
    responses={'201': {'model': str}},
)
def upload_organization_icon() -> Union[None, str]:
    """
    Позволяет загрузить изображение в систему
    """
    pass


@app.delete('/api/organization/{id}', response_model=None)
def delete_organization(id: int) -> None:
    pass


@app.get('/api/organization/{id}', response_model=None)
def get_organization_info(id: int) -> None:
    pass
